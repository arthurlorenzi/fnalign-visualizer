{"version":3,"sources":["layouts/viz.js","stores/AlignmentStore.js","components/Sankey.js","components/LUMatchingGraph.js","components/SynsetGraph.js","stores/UiState.js","components/ChartPanel.js","components/FormLabel.js","components/CheckBox.js","components/NumericInput.js","components/CheckBoxEnabledInput.js","components/JsonFileInput.js","components/Slider.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["viz","version","keyPrimary","keySecondary","value","width","height","orient","barSize","min","pad","data","fill","g","edgeOpacity","duration","sortPrimary","sortSecondary","edgeMode","bP","_","each","d3","this","bars","s","selectAll","subBars","enter","append","attr","d","x","y","fx","fy","fw","fh","style","e","edges","path","mainBars","arguments","length","mb","primary","secondary","key","_or","calculateMainBars","calculateSubBars","m","forEach","floorMainBars","concat","map","index","eMode","get","edgeVert","edgeHoriz","percent","x1","y1","x2","y2","x3","y3","x4","y4","join","mx1","mx3","my1","my3","calculateEdges","isSelKey","part","v","ps","sortKeys","rollup","entries","bpmap","bsize","i","push","p","values","t","a","r","ln","lp","o","b","ret","update","_data","b1","dur","transition","select","mouseover","newbars","filter","mouseout","DEFAULT_PARAMS","attr_matching","threshold","displayOnlyFrameSet","sankeyMaxEdges","limitSankeyEdges","lu_wordnet","synset","synset_inv","lu_muse","neighborhoodSize","similarityThreshold","lu_mean_muse","AlignmentStore","uiState","indices","frames","framesByName","synsetsByLU","synsetData","vectorIdsByLU","wordsByVectorId","frameVectorCache","previousParams","createNode","name","inDegree","outDegree","load","action","fndb","db","language","lang","alignments","row","j","id","Object","prototype","hasOwnProperty","call","frame","scoringOptions","desc","type","params","resources","lu_to_syn","syn_data","lu_vec_nn","id2word","setSelectedFramePair","scoring","sankeyFrames","frameSet","prevParams","recompute","size","every","has","computeEdges","frameId","LUs","gid","LUVectorMatchingScore","bfnFrame","l2Frame","flatMap","slice","Set","nodes","getLUNodes","inter","getConnectionObjects","links","l","target","frm1LU","n","source","swap","isReferenceNode","isIntersection","isMatchingNode","computeDegrees","isReferenceFn","frm2LU","selectedFrames","LUNodes","relationMap","nameFn","Array","isArray","intermediateMap","node","sort","counts","state","filterFn","filtered","getEdges","pruneEdges","f","flat","label","disabled","LUWordNetGraph","synsetGraph","LUMuseGraph","decorate","observable","lexicalIndices","computed","sankeyData","frameOptions","scoreFormatter","format","colors","Sankey","observer","props","svg","selection","bPg","renderSankey","bar","shrink","expand","edge","store","onEdgeClick","text","colorGen","colorMap","reduce","res","current","next","window","innerHeight","remove","on","onNodeClick","ref","className","React","Component","LUMatchingGraph","root","margin","renderGraph","graphData","scalePoint","domain","range","padding","yLU1","yLU2","yInter","frm1LUX","frm2LUX","interX","datum","coef","ccoef","Math","abs","framePair","matching","reference","right","left","html","getRenderingData","bbox","getBBox","onMouseOverNode","onMouseOutNode","computePath","includeFooter","linked","add","markerWidth","markerHeight","refX","refY","points","SynsetGraph","posRegex","highlighted","replace","definition","lemmaHtml","tooltip","getBoundingClientRect","top","lemma","isHighlighted","UiState","isSidebarOpen","isAlignmentDetailVisible","find","scoringSelectOptions","ChartPanel","selectableTypes","indexOf","onClick","onBackClick","FormLabel","children","CheckBox","checked","onChange","marginLeft","NumericInput","max","step","placeholder","renderLabel","Number","CheckBoxEnabledInput","onCheckedChange","onValueChange","JsonFileInput","onFileChange","event","file","files","reader","FileReader","addEventListener","error","JSON","parse","result","exception","setState","readAsBinaryString","renderError","Slider","Sidebar","onScoringChange","option","setScoring","onFrameSelectionChange","selected","updateParam","param","onThresholdChange","onLimitSankeyEdgesChange","onSankeyEdgesMaxChange","onDisplayOnlyFrameSetChange","onNeighborhoodSizeChange","onSimilarityThresholdChange","sidebarWidth","contentDisplay","display","color","marginTop","options","renderVectorFields","items","selectedItems","responsiveHeight","itemHeight","wrapperClassName","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0eb09ea6.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nvar viz = { version: \"1.1.8\" };\n\nviz.bP = function(){\n\tvar keyPrimary, keySecondary, value\n\t,width, height, orient, barSize, min, pad\n\t,data, fill, g, edgeOpacity, duration\n\t,sortPrimary, sortSecondary, edgeMode\n\t;\n\tfunction bP(_){\n\tg=_;\n\t\t\t_.each(function() {\n\t\t\t\tvar g = d3.select(this);\n\t\tvar bars = bP.bars();\n\t\n\t\tvar s = g.selectAll(\".subBars\")\n\t\t\t\t.data(bars.subBars)\n\t\t\t\t.enter()\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.attr(\"class\",\"subBars\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\t\t\tif(typeof fill !==\"undefined\") s.style(\"fill\", function(d){ return fill(d); });\n\t\t\t\n\t\t\t\tvar e = g.selectAll(\".edges\")\n\t\t\t\t.data(bars.edges)\n\t\t\t\t.enter()\n\t\t\t\t.append(\"path\")\n\t\t\t\t.attr(\"class\",\"edges\")\n\t\t\t\t.attr(\"d\",function(d){ return d.path; })\n\t\t.style(\"fill-opacity\",bP.edgeOpacity());\n\t\t\t\t\n\t\t\t\tif(typeof fill !==\"undefined\") e.style(\"fill\", function(d){ return fill(d); });\n\t\t\n\t\t\t\tg.selectAll(\".mainBars\")\n\t\t\t\t.data(bars.mainBars)\n\t\t\t\t.enter()\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.attr(\"class\",\"mainBars\")\n\t\t\t\t.append(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t\t.style(\"fill-opacity\",0)\n\t\t// .on(\"mouseover\",bP.mouseover)\n\t\t// .on(\"mouseout\",bP.mouseout);\n\t});\n\t}\n\tbP.data = function(_){\n\tif(!arguments.length) return data;\n\tdata = _;\n\treturn bP;\n\t}\n\tbP.fill = function(_){\n\tif(!arguments.length) return fill;\n\tfill = _;\n\treturn bP;\n\t}\n\tbP.keyPrimary = function(_){ \n\tif(!arguments.length) return typeof keyPrimary !== \"undefined\" ? keyPrimary : function(d){ return d[0]; } ;\n\tkeyPrimary = _;\n\treturn bP;\t\t\n\t}\n\tbP.sortPrimary = function(_){ \n\tif(!arguments.length) return typeof sortPrimary !== \"undefined\" ? sortPrimary : d3.ascending ;\n\tsortPrimary = _;\n\treturn bP;\t\t\n\t}\n\tbP.keySecondary = function(_){ \n\tif(!arguments.length) return typeof keySecondary !== \"undefined\" ? keySecondary : function(d){ return d[1]; };\n\tkeySecondary = _;\n\treturn bP;\t\t\n\t}\n\tbP.sortSecondary = function(_){ \n\tif(!arguments.length) return typeof sortSecondary !== \"undefined\" ? sortSecondary : d3.ascending;\n\tsortSecondary = _;\n\treturn bP;\t\t\n\t}\t  \n\tbP.value = function(_){ \n\tif(!arguments.length) return typeof value !== \"undefined\" ? value : function(d){ return d[2]; };\n\tvalue = _;\n\treturn bP;\t\t\n\t}\t  \n\tbP.width = function(_){\n\tif(!arguments.length) return typeof width !== \"undefined\" ? width : 400;\n\twidth = _;\n\treturn bP;\n\t}\n\tbP.height = function(_){\n\tif(!arguments.length) return typeof height !== \"undefined\" ? height : 600;\n\theight = _;\n\treturn bP;\n\t}\n\tbP.barSize = function(_){\n\tif(!arguments.length) return typeof barSize !== \"undefined\" ? barSize : 35;\n\tbarSize = _;\n\treturn bP;\n\t}\n\tbP.min = function(_){\n\tif(!arguments.length) return typeof min !== \"undefined\" ? min : 0;\n\tmin = _;\n\treturn bP;\n\t}\n\tbP.orient = function(_){\n\tif(!arguments.length) return typeof orient !== \"undefined\" ? orient : \"vertical\";\n\torient = _;\n\treturn bP;\n\t}\n\tbP.pad = function(_){\n\tif(!arguments.length) return typeof pad !== \"undefined\" ? pad : 0;\n\tpad = _;\n\treturn bP;\n\t}\n\tbP.duration = function(_){\n\tif(!arguments.length) return typeof duration !== \"undefined\" ? duration : 500;\n\tduration = _;\n\treturn bP;\n\t}\n\tbP.edgeOpacity = function(_){\n\tif(!arguments.length) return typeof edgeOpacity !== \"undefined\" ? edgeOpacity : .4;\n\tedgeOpacity = _;\n\treturn bP;\n\t}\n\tbP.edgeMode = function(_){\n\tif(!arguments.length) return typeof edgeMode !== \"undefined\" ? edgeMode : \"curved\";\n\tedgeMode = _;\n\treturn bP;\n\t}\n\tbP.bars = function(mb){\n\tvar mainBars={primary:[], secondary:[]};\n\tvar subBars= {primary:[], secondary:[]};\n\tvar key ={primary:bP.keyPrimary(), secondary:bP.keySecondary() };\n\tvar _or = bP.orient();\n\t\n\tcalculateMainBars(\"primary\");\n\tcalculateMainBars(\"secondary\");\t\n\tcalculateSubBars(\"primary\");\t\n\tcalculateSubBars(\"secondary\");\n\tfloorMainBars(); // ensure that main bars is atleast of size mi.n\n\t\n\treturn {\n\t\t\tmainBars:mainBars.primary.concat(mainBars.secondary)\n\t\t,subBars:subBars.primary.concat(subBars.secondary)\n\t\t,edges:calculateEdges()\n\t};\n\n\tfunction isSelKey(d, part){ \n\t\treturn (typeof mb === \"undefined\" || mb.part === part) || (key[mb.part](d) === mb.key);\n\t}\n\tfunction floorMainBars(){\n\t\tvar m =bP.min()/2;\n\t\t\n\t\tmainBars.primary.forEach(function(d){\n\t\t\tif(d.height<m) d.height=m;\n\t\t});\n\t\tmainBars.secondary.forEach(function(d){\n\t\t\tif(d.height<m) d.height=m;\n\t\t});\n\t}\n\tfunction calculateMainBars(part){\n\t\t\t;\n\t\tfunction v(d){ return isSelKey(d, part) ? bP.value()(d): 0;};\n\n\t\tvar ps = d3.nest()\n\t\t\t.key(part===\"primary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"primary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.rollup(function(d){ return d3.sum(d,v); })\n\t\t\t.entries(bP.data())\n\t\t;\n\t\t\n\t\tvar bars = bpmap(ps, bP.pad(), bP.min(), 0, _or===\"vertical\" ? bP.height() : bP.width());\n\t\tvar bsize = bP.barSize();\n\t\tps.forEach(function(d,i){ \n\t\t\tmainBars[part].push({\n\t\t\t\t\tx:_or===\"horizontal\"? (bars[i].s+bars[i].e)/2 : (part===\"primary\" ? bsize/2 : bP.width()-bsize/2)\n\t\t\t\t,y:_or===\"vertical\"? (bars[i].s+bars[i].e)/2 : (part===\"primary\" ? bsize/2 : bP.height()-bsize/2)\n\t\t\t\t,height:_or===\"vertical\"? (bars[i].e - bars[i].s)/2 : bsize/2\n\t\t\t\t,width: _or===\"horizontal\"? (bars[i].e - bars[i].s)/2 : bsize/2\n\t\t\t\t,part:part\n\t\t\t\t,key:d.key\n\t\t\t\t,value:d.value\n\t\t\t\t,percent:bars[i].p\n\t\t\t});\n\t\t});\n\t}\n\tfunction calculateSubBars(part){\n\t\tfunction v(d){ return isSelKey(d, part) ? bP.value()(d): 0;};\n\t\t\t\t\n\t\tvar map = d3.map(mainBars[part], function(d){ return d.key});\n\t\t\n\t\tvar ps = d3.nest()\n\t\t\t.key(part===\"primary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"primary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.key(part===\"secondary\"? bP.keyPrimary():bP.keySecondary())\n\t\t\t.sortKeys(part===\"secondary\"? bP.sortPrimary():bP.sortSecondary())\n\t\t\t.rollup(function(d){ return d3.sum(d,v); })\n\t\t\t.entries(bP.data());\n\n\t\tps.forEach(function(d){ \n\t\t\tvar g= map.get(d.key); \n\t\t\tvar bars = bpmap(d.values, 0, 0\n\t\t\t\t\t,_or===\"vertical\" ? g.y-g.height : g.x-g.width\n\t\t\t\t\t,_or===\"vertical\" ? g.y+g.height : g.x+g.width);\n\n\t\t\tvar bsize = bP.barSize();\t\t\t\n\t\t\td.values.forEach(function(t,i){ \n\t\t\t\tsubBars[part].push({\n\t\t\t\t\t\tx:_or===\"vertical\"? part===\"primary\" ? bsize/2 : bP.width()-bsize/2 : (bars[i].s+bars[i].e)/2\n\t\t\t\t\t,y:_or===\"horizontal\"? part===\"primary\" ? bsize/2 : bP.height()-bsize/2 : (bars[i].s+bars[i].e)/2\n\t\t\t\t\t,height:(_or===\"vertical\"? bars[i].e - bars[i].s : bsize)/2\n\t\t\t\t\t,width: (_or===\"horizontal\"? bars[i].e - bars[i].s : bsize)/2\n\t\t\t\t\t,part:part\n\t\t\t\t\t,primary:part===\"primary\"? d.key : t.key\n\t\t\t\t\t,secondary:part===\"primary\"? t.key : d.key\t\n\t\t\t\t\t,value:t.value\n\t\t\t\t\t,percent:bars[i].p*g.percent\n\t\t\t\t\t,index: part===\"primary\"? d.key+\"|\"+t.key : t.key+\"|\"+d.key //index \n\t\t\t\t});\n\t\t\t});\t\t  \n\t\t});\n\t}\n\tfunction calculateEdges(){\t\n\t\tvar map=d3.map(subBars.secondary,function(d){ return d.index;});\n\t\tvar eMode= bP.edgeMode();\n\t\t\n\t\treturn subBars.primary.map(function(d){\n\t\t\tvar g=map.get(d.index);\n\t\t\treturn {\n\t\t\t\t\tpath:_or === \"vertical\" \n\t\t\t\t\t? edgeVert(d.x+d.width,d.y+d.height,g.x-g.width,g.y+g.height,g.x-g.width,g.y-g.height,d.x+d.width,d.y-d.height)\n\t\t\t\t\t: edgeHoriz(d.x-d.width,d.y+d.height,g.x-g.width,g.y-g.height,g.x+g.width,g.y-g.height,d.x+d.width,d.y+d.height)\n\t\t\t\t,primary:d.primary\n\t\t\t\t,secondary:d.secondary\n\t\t\t\t,value:d.value\n\t\t\t\t,percent:d.percent\n\t\t\t}\n\t\t});\n\t\tfunction edgeVert(x1,y1,x2,y2,x3,y3,x4,y4){\n\t\t\tif(eMode===\"straight\") return [\"M\",x1,\",\",y1,\"L\",x2,\",\",y2,\"L\",x3,\",\",y3,\"L\",x4,\",\",y4,\"z\"].join(\"\")\n\t\t\tvar mx1=(x1+x2)/2,mx3=(x3+x4)/2;\n\t\t\treturn [\"M\",x1,\",\",y1,\"C\",mx1,\",\",y1,\" \",mx1,\",\",y2,\",\",x2,\",\",y2,\"L\"\n\t\t\t\t\t,x3,\",\",y3,\"C\",mx3,\",\",y3,\" \",mx3,\",\",y4,\",\",x4,\",\",y4,\"z\"].join(\"\");\n\t\t}\n\t\tfunction edgeHoriz(x1,y1,x2,y2,x3,y3,x4,y4){\n\t\t\tif(eMode===\"straight\") return [\"M\",x1,\",\",y1,\"L\",x2,\",\",y2,\"L\",x3,\",\",y3,\"L\",x4,\",\",y4,\"z\"].join(\"\")\n\t\t\tvar my1=(y1+y2)/2,my3=(y3+y4)/2;\n\t\t\treturn [\"M\",x1,\",\",y1,\"C\",x1,\",\",my1,\" \",x2,\",\",my1,\",\",x2,\",\",y2,\"L\"\n\t\t\t\t\t,x3,\",\",y3,\"C\",x3,\",\",my3,\" \",x4,\",\",my3,\",\",x4,\",\",y4,\"z\"].join(\"\");\n\t\t}\n\t}\n\tfunction bpmap(a/*array*/, p/*pad*/, m/*min*/, s/*start*/, e/*end*/){\n\t\tvar r = m/(e-s-2*a.length*p); // cut-off for ratios\n\t\tvar ln =0, lp=0, t=d3.sum(a,function(d){ return d.value;}); // left over count and percent.\n\t\ta.forEach(function(d){ if(d.value < r*t ){ ln+=1; lp+=d.value; }})\n\t\tvar o= t < 1e-5 ? 0:(e-s-2*a.length*p-ln*m)/(t-lp); // scaling factor for percent.\n\t\tvar b=s, ret=[];\n\t\ta.forEach(function(d){ \n\t\t\tvar v =d.value*o; \n\t\t\tret.push({\n\t\t\t\t\ts:b+p+(v<m?.5*(m-v): 0)\n\t\t\t\t,e:b+p+(v<m? .5*(m+v):v)\n\t\t\t\t,p:t < 1e-5? 0:d.value/t\n\t\t\t}); \n\t\t\tb+=2*p+(v<m? m:v); \n\t\t});\n\t\t\n\t\treturn ret;\n\t}\t  \n\t}\t  \n\tbP.update = function(_data){\n\t\tdata = _data;\n\tvar b1 = bP.bars();\n\tvar dur = bP.duration();\n\t\n\tg.selectAll(\".subBars\").data(b1.subBars).transition().duration(dur)\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.select(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\t\t\t\t\n\t\t\tg.selectAll(\".edges\").data(b1.edges).transition().duration(dur)\n\t\t\t\t.attr(\"d\",function(d){ return d.path; })\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\t\t\t\t\t\n\t\t\tg.selectAll(\".mainBars\").data(b1.mainBars).transition().duration(dur)\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t\t\t.select(\"rect\")\n\t\t\t\t.attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t\t// .style(\"fill-opacity\",0)\n\t\t.style(\"visibility\", \"hidden\")\n\t}\n\tbP.mouseover = function(d){\n\t\tvar newbars = bP.bars(d);\n\t\tg.selectAll(\".mainBars\").filter(function(r){ return r.part===d.part && r.key === d.key})\n\t\t.select(\"rect\").style(\"stroke-opacity\", 1);\n\t\t\n\t\tg.selectAll(\".subBars\").data(newbars.subBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\tvar e = g.selectAll(\".edges\")\n\t\t.data(newbars.edges);\n\t\t\n\t\te.filter(function(t){ return t[d.part] === d.key;})\n\t\t.transition().duration(bP.duration())\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\te.filter(function(t){ return t[d.part] !== d.key;})\n\t\t.transition().duration(bP.duration())\n\t\t// .style(\"fill-opacity\",0)\n\t\t.style(\"visibility\", \"hidden\")\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\tg.selectAll(\".mainBars\").data(newbars.mainBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh)\n\t}\n\tbP.mouseout = function(d){\n\t\tvar newbars = bP.bars();\n\t\t\t\t\t\n\t\tg.selectAll(\".mainBars\").filter(function(r){ return r.part===d.part && r.key === d.key})\n\t\t.select(\"rect\").style(\"stroke-opacity\", 0);\n\t\t\n\t\tg.selectAll(\".subBars\").data(newbars.subBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t\t\n\t\tg.selectAll(\".edges\").data(newbars.edges)\n\t\t.transition().duration(bP.duration())\n\t\t.style(\"fill-opacity\",bP.edgeOpacity())\n\t\t.style(\"visibility\", \"visible\")\n\t\t.attr(\"d\",function(d){ return d.path});\t\n\t\t\n\t\tg.selectAll(\".mainBars\").data(newbars.mainBars)\n\t\t.transition().duration(bP.duration())\n\t\t.attr(\"transform\", function(d){ return \"translate(\"+d.x+\",\"+d.y+\")\";})\n\t\t.select(\"rect\").attr(\"x\",fx).attr(\"y\",fy).attr(\"width\",fw).attr(\"height\",fh);\n\t}\n\tfunction fx(d){ return -d.width}\n\tfunction fy(d){ return -d.height}\n\t\tfunction fw(d){ return 2*d.width}\n\t\tfunction fh(d){ return 2*d.height}\n\t\n\treturn bP;\n}\t\n\nexport default viz;\n","import { action, computed, decorate, observable } from 'mobx';\n\n// Default params of each scoring type\nconst DEFAULT_PARAMS = {\n\tattr_matching: {\n\t\tthreshold: 0,\n\t\tdisplayOnlyFrameSet: true,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tlu_wordnet: {\n\t\tthreshold: 0.4,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tsynset: {\n\t\tthreshold: 0.1,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tsynset_inv: {\n\t\tthreshold: 0.1,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: null,\n\t\tlimitSankeyEdges: false,\n\t},\n\tlu_muse: {\n\t\tthreshold: 0.75,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: 5,\n\t\tlimitSankeyEdges: true,\n\t\tneighborhoodSize: 5,\n\t\tsimilarityThreshold: 0.3,\n\t},\n\tlu_mean_muse: {\n\t\tthreshold: 0.85,\n\t\tdisplayOnlyFrameSet: false,\n\t\tsankeyMaxEdges: 5,\n\t\tlimitSankeyEdges: true,\n\t}\n};\n\n/**\n * Check if two sets are equal in the sense that they have a matching set of\n * values.\n *\n * @param {Set} a \n * @param {Set} b\n * @returns {Boolean} \n */\nconst areSetsEqual = (a, b) => (\n\t(a.size === b.size) ? \n\t[...a].every( value => b.has(value) ) : false\n);\n\n/**\n * MobX store for alignment data of a specific FrameNet database against\n * Berkeley FrameNet.\n */\nclass AlignmentStore {\n\n\t/**\n\t * Name of the FrameNet database of loaded alignemnt.\n\t */\n\tfndb\n\n\t/**\n\t * Language of this.fndb, aka, L2.\n\t */\n\tlanguage\n\n\t/**\n\t * Dictionary to hold multiple lists of non-zero alignment score between two\n\t * frames, the key for each list is a string representing a scoring technique.\n\t */\n\tedges = {}\n\n\t/**\n\t * String indices of the scoring matrix of shape (M, N) where M is the number\n\t * of english frames e N the number of L2 frames.\n\t */\n\tindices = []\n\n\t/**\n\t * Frame data dictionary with global ids as keys.\n\t */\n\tframes = {}\n\n\t/**\n\t * Frame data dictionary with frame names + language as keys.\n\t */\n\tframesByName = {}\n\n\t/**\n\t * Mapping of LU names to a list of relevant synsets.\n\t */\n\tsynsetsByLU = {}\n\n\t/**\n\t * Synset data dictionary with synset ids as keys.\n\t */\n\tsynsetData = {}\n\n\t/**\n\t * Mapping of english LU names to word vectors ids in L2 space.\n\t */\n\tvectorIdsByLU = []\n\n\t/**\n\t * Dictionary of words with vector ids as keys.\n\t */\n\twordsByVectorId = []\n\n\t/**\n\t * Dictionary used for caching the vectors of frames.\n\t */\n\tframeVectorCache = {}\n\n\t/**\n\t * Object used to store the values of the parameters used in the most recent\n\t * visualization.\n\t */\n\tpreviousParams = {}\n\n\tconstructor(uiState) {\n\t\tthis.uiState = uiState;\n\t}\n\n\t/**\n\t * Returns the edges of a sankey diagram of the stored alignment respecting\n\t * UI params. \n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} edges of the sankey diagram with source, target and size.\n\t */\n\tget sankeyData() {\n\t\tconst state = this.uiState;\n\t\tconst {scoring} = state;\n\t\t\n\t\tif (scoring) {\n\t\t\tconst {params} = scoring;\n\t\t\tconst frameSet = new Set(state.sankeyFrames.map(x => x.id));\n\t\t\tconst filterFn = params.displayOnlyFrameSet\n\t\t\t\t? x => frameSet.has(x[0]) && frameSet.has(x[1]) && x[2] >= params.threshold\n\t\t\t\t: x => (frameSet.has(x[0]) || frameSet.has(x[1])) && x[2] >= params.threshold;\n\t\t\tconst edges = this.getEdges(frameSet);\n\t\t\tconst filtered = edges.filter(filterFn);\n\n\t\t\treturn this.pruneEdges(filtered)\n\t\t\t\t.map(x => [\n\t\t\t\t\tthis.frames[x[0]].name + '.' + this.frames[x[0]].language,\n\t\t\t\t\tthis.frames[x[1]].name + '.' + this.frames[x[1]].language,\n\t\t\t\t\tx[2],\n\t\t\t\t]);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Returns indices of lexical frames derived from this.indices.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array[Array[string]]} 2-dimension array of index ids.\n\t */\n\tget lexicalIndices() {\n\t\treturn this.indices.map(i => i.filter(f => this.frames[f].LUs.length > 0));\n\t}\n\n\t/**\n\t * Returns a sorted list of frames present in this alignment indicating if\n\t * they can be selected for visualization. Frames with no LUs cannot be\n\t * selected.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} english + L2 frames in \"Select\" components option format.\n\t */\n\tget frameOptions() {\n\t\treturn this.indices\n\t\t\t.flat()\n\t\t\t.map(x => ({\n\t\t\t\tid: x,\n\t\t\t\tlabel: this.frames[x].name + '.' + this.frames[x].language,\n\t\t\t\tdisabled: this.frames[x].LUs.length === 0,\n\t\t\t}))\n\t\t\t.sort((a, b) => (a.label < b.label) ? -1 : (a.label > b.label) ? 1 : 0);\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition of the selected alignemnt. When\n\t * no alignment is selected, i.e., the UI state doesn't have a pair of\n\t * selected frames, this method should return an empty list for both node and\n\t * link definitions. The same applies with the method has no mapping between\n\t * LUs (e.g. The alignment is score is the similarity of the average LU\n\t * vector of each frame).\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tget graphData() {\n\t\tconst {scoring} = this.uiState;\n\t\t\n\t\tif (!scoring)\n\t\t\treturn { nodes: [], links: [] };\n\n\t\tswitch(scoring.type) {\n\t\t\tcase 'lu_wordnet':\n\t\t\t\treturn this.LUWordNetGraph();\n\t\t\tcase 'synset':\n\t\t\tcase 'synset_inv':\n\t\t\t\treturn this.synsetGraph();\n\t\t\tcase 'lu_muse':\n\t\t\t\treturn this.LUMuseGraph();\n\t\t\tdefault:\n\t\t\t\treturn { nodes: [], links: [] };\n\t\t}\n\t}\n\n\t/**\n\t * Gets the edges of the Sankey diagram for the selected scoring method. This\n\t * function will recomputed edges if necessary, else it will return data from\n\t * this.edges.\n\t * \n\t * @public\n\t * @method\n\t * @param {Set} frameSet set of frames of interest.\n\t * @returns {Array[Array]} edges of the sankey diagram in the format\n\t * \t[source id, target id, score value].\n\t */\n\tgetEdges(frameSet) {\n\t\tconst {scoring} = this.uiState;\n\t\tconst {params} = scoring;\n\t\tconst prevParams = this.previousParams[scoring.id] || {};\n\t\tlet edges;\n\n\t\tif (scoring.type === 'lu_muse' || !this.edges[scoring.id]) {\n\t\t\tlet recompute = false;\n\n\t\t\tfor (let key of ['neighborhoodSize', 'similarityThreshold']) {\n\t\t\t\tif (prevParams[key] !== params[key]) {\n\t\t\t\t\trecompute = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!recompute) {\n\t\t\t\trecompute = !areSetsEqual(prevParams['frameSet'], frameSet);\n\t\t\t}\n\n\t\t\tif (recompute) {\n\t\t\t\tedges = this.computeEdges(frameSet);\n\t\t\t\tthis.edges[scoring.id] = edges;\n\t\t\t} else {\n\t\t\t\tedges = this.edges[scoring.id];\n\t\t\t}\n\t\t} else {\n\t\t\tedges = this.edges[scoring.id];\n\t\t}\n\n\t\tthis.previousParams[scoring.id] = {...params};\n\t\tthis.previousParams[scoring.id]['frameSet'] = frameSet;\n\n\t\treturn edges;\n\t}\n\n\t/**\n\t * Computes Sankey diagram edges of the given frame set. Each frame in this\n\t * set will have its alignment score with all frames in the other language\n\t * computed.\n\t * \n\t * @public\n\t * @method\n\t * @param {Set} frameSet set of frames that edges will be computed.\n\t * @returns {Array[Array]} edges of the sankey diagram in the format\n\t * \t[source id, target id, score value].\n\t */\n\tcomputeEdges(frameSet) {\n\t\tconst edges = [];\n\t\t/**\n\t\t * Indices are filtered to prevent duplicate edges when \"frameSet\" has\n\t\t * english and L2 frames. For example, if \"A\" is an english frame and \"B\"\n\t\t * is a L2 frame, \"A\" would first be scored against all L2 frames\n\t\t * (including \"B\"). Later, \"B\" would be scored against all english frames;\n\t\t * the alignment of the pair (\"A\", \"B\") would end up being calculated\n\t\t * again. Of course, we could always check if the other frame is in the\n\t\t * frame set before calculating the pair score, but filtering the indices\n\t\t * yields the same results with less checks.\n\t\t */\n\t\tconst indices = [\n\t\t\tthis.indices[0].filter(x => !frameSet.has(x)),\n\t\t\tthis.indices[1],\n\t\t];\n\t\n\t\n\t\tfor (let frameId of frameSet) {\n\t\t\tconst frame = this.frames[frameId];\n\t\n\t\t\tif (frame.LUs.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t} \n\t\n\t\t\tif (frame.language === 'en') {\n\t\t\t\tedges.push(\n\t\t\t\t\t...indices[1].map(i => [frame.gid, i, this.LUVectorMatchingScore(frame, this.frames[i])])\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tedges.push(\n\t\t\t\t\t...indices[0].map(i => [i, frame.gid, this.LUVectorMatchingScore(this.frames[i], frame)])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.frameVectorCache = {};\n\t\treturn edges.filter(x => x[2] > 0);\n\t}\n\n\t/**\n\t * Computes the alignment score between the given frames using multilingual\n\t * space vectors to match LUs.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} bfnFrame the english frame data object.\n\t * @param {Object} l2Frame the L2 frame data object.\n\t */\n\tLUVectorMatchingScore(bfnFrame, l2Frame) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tif (!this.frameVectorCache[bfnFrame.gid]) {\n\t\t\tthis.frameVectorCache[bfnFrame.gid] = \n\t\t\t\tbfnFrame.LUs\n\t\t\t\t\t.map(x => this.vectorIdsByLU[x])\n\t\t\t\t\t.filter(x => x)\n\t\t\t\t\t.flatMap(x => x.slice(0, params.neighborhoodSize))\n\t\t\t\t\t.filter(x => x[0] >= params.similarityThreshold);\n\t\t}\n\n\t\tif (!this.frameVectorCache[l2Frame.gid]) {\n\t\t\tthis.frameVectorCache[l2Frame.gid] = new Set(\n\t\t\t\tl2Frame.LUs\n\t\t\t\t\t.flatMap(x => this.vectorIdsByLU[x])\n\t\t\t\t\t.filter(x => x)\n\t\t\t\t\t.map(x => x[1])\n\t\t\t);\n\t\t}\n\t\n\t\tconst matches = this.frameVectorCache[bfnFrame.gid]\n\t\t\t\t.filter(x => x && this.frameVectorCache[l2Frame.gid].has(x[1]));\n\t\t\n\t\treturn matches.length / bfnFrame.LUs.length;\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for lu_wordnet scoring, where\n\t * two LUs are matched when both are in the same synset.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tLUWordNetGraph() {\n\t\tconst nodes = this.getLUNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.synsetsByLU);\n\t\tconst links = inter.links.filter(l => l.target.frm1LU);\n\n\t\tnodes.push(...inter.nodes.filter(n => n.frm1LU));\n\t\tlinks.filter(l => l.source.type === 'frm2LU').forEach(l => {\n\t\t\tlet swap = l.source;\n\t\t\tl.source = l.target;\n\t\t\tl.target = swap;\n\t\t})\n\t\tnodes.forEach(n => n.isReferenceNode = n.type === 'frm1LU');\n\t\tlinks\n\t\t\t.filter(l => (l.source.type === 'frm1LU' && l.target.isIntersection))\n\t\t\t.forEach(l => {\n\t\t\t\tl.source.isMatchingNode = true;\n\t\t\t});\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for synset/synset_inv scoring,\n\t * where a set of synsets is defined for each frame (based on their LUs) and\n\t * the intersection between two sets is the base of the alignment between two\n\t * frames.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tsynsetGraph() {\n\t\tconst type = this.uiState.scoring.type;\n\t\tconst nodes = this.getLUNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.synsetsByLU);\n\t\tconst links = inter.links;\n\n\t\tnodes.push(...inter.nodes);\n\t\tconst isReferenceFn = type === 'synset' ? n => n.frm1LU : n => n.frm2LU;\n\t\tnodes.forEach(n => {\n\t\t\tn.isReferenceNode = isReferenceFn(n);\n\t\t\tn.isMatchingNode = n.isIntersection;\n\t\t})\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Returns the LU matching graph definition for lu_muse scoring, where a\n\t * match between two LUs happen when the cosine similarity of their vectors\n\t * is more than a given threshold.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Object} Graph definition with a node list and a link list.\n\t */\n\tLUMuseGraph() {\n\t\tconst nodes = this.getLUNodes();\n\t\tconst inter = this.getConnectionObjects(nodes, this.vectorIdsByLU, x => this.wordsByVectorId[x]);\n\t\tconst links = inter.links.filter(l => l.target.frm1LU);\n\n\t\tnodes.push(...inter.nodes.filter(n => n.frm1LU));\n\t\tlinks.filter(l => l.source.type === 'frm2LU').forEach(l => {\n\t\t\tlet swap = l.source;\n\t\t\tl.source = l.target;\n\t\t\tl.target = swap;\n\t\t})\n\t\tnodes.forEach(n => n.isReferenceNode = n.type === 'frm1LU');\n\t\tlinks\n\t\t\t.filter(l => (l.source.type === 'frm1LU' && l.target.isIntersection))\n\t\t\t.forEach(l => {\n\t\t\t\tl.source.isMatchingNode = true;\n\t\t\t});\n\t\tthis.computeDegrees(links);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Creates an object containing basic information of a graph node for\n\t * visualization based on the node name.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} name the name of the node.\n\t * @returns {Object} graph node object.\n\t */\n\tcreateNode = name => ({ name: name, inDegree: 0, outDegree: 0, });\n\n\t/**\n\t * Returns the list of LU nodes of the selected frames identifying if they\n\t * are LUs from the first or the second frame.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} list of LU nodes.\n\t */\n\tgetLUNodes() {\n\t\tconst {selectedFrames} = this.uiState;\n\n\t\tif (selectedFrames[0] && selectedFrames[1]) {\n\t\t\treturn this.frames[selectedFrames[0]].LUs\n\t\t\t\t.map(x => ({ type: 'frm1LU', ...this.createNode(x) }))\n\t\t\t\t.concat(\n\t\t\t\t\tthis.frames[selectedFrames[1]].LUs\n\t\t\t\t\t.map(x => ({ type: 'frm2LU', ...this.createNode(x) }))\n\t\t\t\t);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Generates intermediate node objects for a graph based on the mapping of\n\t * LUs to these nodes. An intermediate node can be, for example, a synset\n\t * node that was used as  \"translator\". The method returns those nodes and\n\t * their links to LU nodes.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} LUNodes list of LU nodes.\n\t * @param {Object} relationMap mapping of LUs to intermediate node ids.\n\t * @param {function} nameFn function to get the name of a node using id.\n\t * @returns {Object} A object containing the intermediate nodes of the graph\n\t * and their links to LU nodes.\n\t */\n\tgetConnectionObjects(LUNodes, relationMap, nameFn=x=>x) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tconst links = LUNodes\n\t\t\t.flatMap(s =>\n\t\t\t\t(relationMap[s.name] || [])\n\t\t\t\t\t.slice(0, params.neighborhoodSize)\n\t\t\t\t\t.filter(t => !Array.isArray(t) || t[0] > params.similarityThreshold)\n\t\t\t\t\t.map(t => ({\n\t\t\t\t\t\tsource: s,\n\t\t\t\t\t\ttarget: Array.isArray(t) ? t[1] : t,\n\t\t\t\t\t}))\n\t\t\t)\n\t\t// Creating node objects for intermediate Nodes\n\t\tconst intermediateMap = {}\n\t\tconst nodes = [...new Set(links.map(l => l.target))]\n\t\t\t\t.map(t => {\n\t\t\t\t\tconst node = {\n\t\t\t\t\t\ttype: 'intermediate',\n\t\t\t\t\t\t...this.createNode(nameFn(t))\n\t\t\t\t\t};\n\t\t\t\t\tintermediateMap[t] = node;\n\t\t\t\t\treturn node;\n\t\t\t\t});\n\t\t// Including references to objects in links\n\t\tlinks.forEach(l => {\n\t\t\tl.target = intermediateMap[l.target];\n\t\t\tl.target[l.source.type] = true;\n\t\t});\n\t\tnodes.forEach(n => n.isIntersection = n.frm1LU && n.frm2LU);\n\n\t\treturn { nodes, links };\n\t}\n\n\t/**\n\t * Computes the degrees of each node in a graph based on its link Array.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} links link list of a graph.\n\t */\n\tcomputeDegrees(links) {\n\t\tlinks.forEach(l => {\n\t\t\t++l.source.outDegree;\n\t\t\t++l.target.inDegree;\n\t\t});\n\t}\n\n\t/**\n\t * Filters the Sankey diagram edge list based on the UI visualization params.\n\t * The list is returned unchanged when limitation of edges on the Sankey\n\t * diagram is disabled.\n\t * \n\t * @public\n\t * @method\n\t * @param {Array} edges Sankey diagram edges.\n\t * @returns {Array} filtered array of edges.\n\t */\n\tpruneEdges(edges) {\n\t\tconst {params} = this.uiState.scoring;\n\n\t\tif (!params.limitSankeyEdges)\n\t\t\treturn edges;\n\n\t\tedges.sort((a, b) => {\n\t\t\tif (a[0] > b[0]) {\n\t\t\t\treturn -1;\n\t\t\t} else if (a[0] < b[0]) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn a[2] > b[2] ? -1 : a[2] < b[2] ? 1 : 0;\n\t\t\t}\n\t\t});\n\n\t\tconst counts = {};\n\n\t\tedges.forEach(x => counts[x[0]] = 0);\n\n\t\treturn edges.filter(x => {\n\t\t\t++counts[x[0]];\n\t\t\treturn counts[x[0]] <= params.sankeyMaxEdges;\n\t\t});\n\t}\n\n\t/**\n\t * Loads a JSON alignment file into the store.\n\t * \n\t * @public\n\t * @method\n\t * @param {Object} data parsed alignment JSON file.\n\t */\n\tload = action(data => {\n\t\tthis.fndb = data.db[1];\n\t\tthis.language = data.lang[1];\n\n\t\tthis.edges = {}\n\t\tdata.alignments.forEach(x => {\n\t\t\tconst edges = [];\n\n\t\t\tif (x.data) {\n\t\t\t\tx.data.forEach((row, i) => {\n\t\t\t\t\trow.forEach((value, j) => {\n\t\t\t\t\t\tif (value > 0)\n\t\t\t\t\t\t\tedges.push([data.indices[0][i], data.indices[1][j], value])\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.edges[x.id] = edges;\n\t\t\t}\n\t\t});\n\n\t\tthis.framesByName = {};\n\t\tfor (let key in data.frames) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(data.frames, key)) {\n\t\t\t\tlet frame = data.frames[key];\n\t\t\t\tthis.framesByName[frame.name + '.' + frame.language] = frame;\n\t\t\t}\n\t\t}\n\n\t\tthis.uiState.scoringOptions =\n\t\t\tdata.alignments.map(x => ({\n\t\t\t\tid: x.id,\n\t\t\t\tdesc: x.desc,\n\t\t\t\ttype: x.type,\n\t\t\t\tparams: DEFAULT_PARAMS[x.type]\n\t\t\t}));\n\n\t\tthis.indices = data.indices;\n\t\tthis.frames = data.frames;\n\t\tthis.synsetsByLU = data.resources.lu_to_syn;\n\t\tthis.synsetData = data.resources.syn_data;\n\t\tthis.vectorIdsByLU = data.resources.lu_vec_nn;\n\t\tthis.wordsByVectorId = data.resources.id2word;\n\n\t\t// Resets\n\t\tthis.uiState.setSelectedFramePair(null, null);\n\t\tthis.uiState.scoring = null;\n\t\tthis.uiState.sankeyFrames = [];\n\t})\n\n}\n\ndecorate(AlignmentStore, {\n\tfndb: observable,\n\tlanguage: observable,\n\tindices: observable,\n\tframes: observable,\n\tsynsetsByLU: observable,\n\tsynsetData: observable,\n\tvectorIdsByLU: observable,\n\twordsByVectorId: observable,\n\tlexicalIndices: computed,\n\tsankeyData: computed,\n\tframeOptions: computed,\n});\n\nexport default AlignmentStore;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'd3-format';\nimport { select } from 'd3-selection';\nimport { observer } from 'mobx-react';\n// TODO: Should redo this d3 layout\nimport viz from '../layouts/viz.js';\n\nimport './Sankey.css';\n\nimport AlignmentStore from '../stores/AlignmentStore';\n\n// A 3-decimal precision formatter.\nconst scoreFormatter = format(\".3f\");\n\n/**\n * Infinitely yields hex colors strings. Since the amount of hex color strings\n * is finite, the same list is yielded through a circular iteration.\n * \n * @generator\n * @function colors\n * @yields {string} a hex color string\n */\nconst colors = function*() {\n\tconst colors = [\n\t\t\"#3366CC\",\n\t\t\"#DC3912\",\n\t\t\"#FF9900\",\n\t\t\"#109618\",\n\t\t\"#990099\",\n\t\t\"#0099C6\"\n\t];\n\tlet index = 0;\n\n\twhile(true) {\n\t\tyield colors[index];\n\t\tindex = ++index % colors.length;\n\t}\n};\n\n/**\n * \n * A Sankey diagram component that uses D3.js to render the visualization as a\n * svg image. This diagram supports click events on Sankey labels and flow\n * connections.\n *\n */\nconst Sankey = observer(\n\tclass Sankey extends React.Component {\n\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called a edge of the diagram is clicked.\n\t\t\t * \n\t\t\t * @param {Array} edge A 2-position array containing the source and target of the edge.\n\t\t\t */\n\t\t\tonEdgeClick: PropTypes.func,\n\t\t}\n\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\t// Reference to svg element\n\t\t\tthis.svg = null;\n\t\t\t// Expanded diagram node\n\t\t\tthis.selection = null;\n\t\t\t// Reference to D3.js layout of the diagram\n\t\t\tthis.bP = null;\n\t\t\t// Reference to diagram root \"g\" svg element\n\t\t\tthis.bPg = null;\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is mounted.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidMount() {\n\t\t\tthis.renderSankey();\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is updated.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidUpdate() {\n\t\t\tthis.renderSankey();\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a bar/node/label of the Sankey diagram. The clicked\n\t\t * item will be expanded or shrink depending of the current state of the\n\t\t * digram.\n\t\t * \n\t\t * @public\n\t\t * @model\n\t\t * @param {Object} bar data object of the clicked bar/label.\n\t\t */\n\t\tonNodeClick(bar) {\n\t\t\tif (this.selection && this.selection.key === bar.key) {\n\t\t\t\tthis.shrink(this.selection);\n\t\t\t\tthis.selection = null;\n\t\t\t} else {\n\t\t\t\tif (this.selection) {\n\t\t\t\t\tthis.shrink(this.selection);\n\t\t\t\t}\n\t\t\t\tthis.selection = bar;\n\t\t\t\tthis.expand(bar);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a edge/connection of the diagram calling parent\n\t\t * component's handler.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} edge data object of the clicked edge.\n\t\t */\n\t\tonEdgeClick(edge) {\n\t\t\tconst {store, onEdgeClick} = this.props;\n\t\t\t\n\t\t\tonEdgeClick(\n\t\t\t\tstore.framesByName[edge.primary],\n\t\t\t\tstore.framesByName[edge.secondary],\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Expands one of the diagram nodes. This will hide all diagram connections\n\t\t * except the ones where the parameter node is source or target. The score\n\t\t * of these connections is also displayed.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} node data object of the node being expanded.\n\t\t */\n\t\texpand(node) {\n\t\t\tconst filterFn =\n\t\t\t\tnode.part === \"primary\"\n\t\t\t\t\t? (d => node.key === d.primary)\n\t\t\t\t\t: (d => node.key === d.secondary);\n\n\t\t\tthis.bP.mouseover(node);\n\t\t\tthis.bPg.selectAll(\".score\")\n\t\t\t\t.filter(filterFn)\n\t\t\t\t.text(d => scoreFormatter(d.value))\n\t\t}\n\n\t\t/**\n\t\t * Shrinks all diagram node expansions, showing all edges and hiding score\n\t\t * numbers.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} node data object of the node being shrinked.\n\t\t */\n\t\tshrink(node) {\n\t\t\tthis.bP.mouseout(node);\n\t\t\tthis.bPg.selectAll(\".score\").text(\"\");\n\t\t}\n\n\t\t/**\n\t\t * Renders the svg Sankey diagram using D3.js and sets up DOM events for its\n\t\t * elements. This rendering should be controlled by D3.js and not ReactJS.\n\t\t * This guarantees that the diagram will not be part of React's virtual\n\t\t * DOM, thus preventing the framework from interfering with elements\n\t\t * created by the library (D3.js).\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\trenderSankey() {\n\t\t\tconst {store} = this.props;\n\t\t\tconst colorGen = colors();\n\t\t\tconst colorMap =\n\t\t\t\t[...new Set(store.sankeyData.map(x => x[0]))]\n\t\t\t\t\t.reduce((res, current) => {\n\t\t\t\t\t\tres[current] = colorGen.next().value;\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}, {});\n\t\t\tconst height = window.innerHeight-10;\n\t\t\tconst width = 960;\n\t\t\tconst svg = select(this.svg);\n\n\t\t\tsvg.select(\"*\").remove();\n\t\t\tsvg.attr(\"width\", width).attr(\"height\", height);\n\n\t\t\tconst g = svg.append(\"g\").attr(\"transform\",\"translate(200,50)\");\n\t\t\t\n\t\t\t// Create layout for sankey (AKA bipartite graph)\n\t\t\tthis.bP =\n\t\t\t\tviz.bP()\n\t\t\t\t\t.data(store.sankeyData)\n\t\t\t\t\t.min(12)\n\t\t\t\t\t.pad(1)\n\t\t\t\t\t.height(height-200)\n\t\t\t\t\t.width(500)\n\t\t\t\t\t.fill(d => colorMap[d.primary])\n\t\t\t\n\t\t\tthis.bPg = g.call(this.bP);\n\n\t\t\t// Setting up events\n\t\t\tthis.bPg.selectAll(\".mainBars\")\n\t\t\t\t.on(\"click\", d => this.onNodeClick(d));\n\t\t\t\n\t\t\tthis.bPg.selectAll(\".edges\")\n\t\t\t\t.on(\"click\", d => this.onEdgeClick(d));\n\n\t\t\t// Appending score text elements\n\t\t\tthis.bPg.selectAll(\".subBars\")\n\t\t\t\t.filter(d => d.part === \"secondary\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\", \"score\")\n\t\t\t\t\t.attr(\"x\", -58)\n\t\t\t\t\t.attr(\"y\", 6)\n\t\t\t\n\t\t\t// Appending node name text elements\n\t\t\tthis.bPg.selectAll(\".mainBars\")\n\t\t\t\t.append(\"text\")\n\t\t\t\t\t.attr(\"class\",\"label\")\n\t\t\t\t\t.attr(\"x\", d => (d.part === \"primary\" ? -30 : 30))\n\t\t\t\t\t.attr(\"y\", () => 6)\n\t\t\t\t\t.text(d => d.key)\n\t\t\t\t\t.attr(\"text-anchor\", d => (d.part === \"primary\" ? \"end\": \"start\"));\n\t\t}\n\n\t\trender() {\n\t\t\tconst data = this.props.store.sankeyData;\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.length > 0\n\t\t\t\t\t\t? <svg ref={node => this.svg = node}></svg>\n\t\t\t\t\t\t: <h3 className=\"no-data-text\">No data to show.</h3>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n);\n\nexport default Sankey;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {format} from 'd3-format';\nimport {select} from 'd3-selection';\nimport {scalePoint} from 'd3-scale';\n\nimport './LUMatchingGraph.css';\n\nimport AlignmentStore from '../stores/AlignmentStore';\n\nconst scoreFormatter = format(\".3f\");\n\n/**\n * A component for lexical unit matching graphs.\n */\nconst LUMatchingGraph = observer(\n\tclass LUMatchingGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A callback called when mouse is placed over of the nodes.\n\t\t\t */\n\t\t\tonMouseOverNode: PropTypes.func,\n\t\t\t/**\n\t\t\t * A callback called when mouse is leaves of the nodes.\n\t\t\t */\n\t\t\tonMouseOutNode: PropTypes.func,\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.root = null;\n\t\t\tthis.links = null;\n\t\t\tthis.nodes = null;\n\t\t\tthis.height = null;\n\t\t\tthis.width = null;\n\t\t\tthis.margin = null;\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is mounted.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidMount() {\n\t\t\tthis.renderGraph();\n\t\t}\n\n\t\t/**\n\t\t * Manually invokes D3.js rendering function when the component is updated.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tcomponentDidUpdate() {\n\t\t\tthis.renderGraph();\n\t\t}\n\n\t\t/**\n\t\t * Gets all required data for rendering. Basic node and link data comes\n\t\t * from the store received from props, this method computes the coordinates\n\t\t * where each element should be rendered.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @returns {Object} Graph definition with a node list and a link list.\n\t\t */\n\t\tgetRenderingData() {\n\t\t\tconst {store} = this.props;\n\t\t\tconst data = store.graphData;\n\t\t\t\n\t\t\tconst x =\n\t\t\t\tscalePoint()\n\t\t\t\t\t.domain(['frm1LU', 'intermediate', 'frm2LU'])\n\t\t\t\t\t.range([0, this.width])\n\t\t\t\t\t.padding(.3)\n\n\t\t\tconst yLU1 = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'frm1LU')\n\t\t\t\t\t.sort((a, b) => b.outDegree - a.outDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([this.margin*2, this.height-(this.margin*2)]);\n\n\t\t\tconst yLU2 = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t\t.filter(d => d.type === 'frm2LU')\n\t\t\t\t\t\t.sort((a,b) => b.outDegree - a.outDegree)\n\t\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([this.margin*2, this.height-(this.margin*2)]);\n\n\t\t\tconst yInter = scalePoint()\n\t\t\t\t.domain(data.nodes\n\t\t\t\t\t.filter(d => d.type === 'intermediate')\n\t\t\t\t\t.sort((a, b) => b.inDegree - a.inDegree)\n\t\t\t\t\t.map(d => d.name))\n\t\t\t\t.range([this.margin, this.height-this.margin]);\n\n\t\t\tconst frm1LUX = x('frm1LU');\n\t\t\tconst frm2LUX = x('frm2LU');\n\t\t\tconst interX = x('intermediate');\n\n\t\t\tdata.nodes.forEach(d => {\n\t\t\t\tif (d.type === 'frm1LU') {\n\t\t\t\t\td.x = frm1LUX;\n\t\t\t\t\td.y = yLU1(d.name);\n\t\t\t\t} else if (d.type === 'frm2LU') {\n\t\t\t\t\td.x = frm2LUX;\n\t\t\t\t\td.y = yLU2(d.name);\n\t\t\t\t} else {\n\t\t\t\t\td.x = interX;\n\t\t\t\t\td.y = yInter(d.name);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tnodes: data.nodes,\n\t\t\t\tlinks: data.links\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Computes the path string for the path element of the given link data.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} datum Link data object.\n\t\t * @returns {string} A string of path commands.\n\t\t */\n\t\tcomputePath(datum) {\n\t\t\tlet coef;\n\t\t\tlet x1 = datum.source.x;\n\t\t\tlet y1 = datum.source.y - (datum.source.height/4);\n\t\t\tlet x2 = datum.target.x;\n\t\t\tlet y2 = datum.target.y - (datum.target.height/4);\n\n\t\t\tif (datum.source.type === 'frm1LU' || datum.source.type === 'intermediate') {\n\t\t\t\tx1 += datum.source.width + 12;\n\t\t\t\tx2 -= 12;\n\t\t\t\tcoef = 1;\n\t\t\t} else {\n\t\t\t\tx1 -= 12;\n\t\t\t\tx2 += datum.target.width + 16;\n\t\t\t\tcoef = -1;\n\t\t\t}\n\n\t\t\tconst offset = 15;\n\t\t\tconst ccoef = (Math.abs(x1 - x2)-2*offset)/2.5;\n\n\t\t\treturn `\n\t\t\t\tM ${x1}            ${y1}\n\t\t\t\tL ${x1 + 3*coef}   ${y1}\n\t\t\t\tC ${x1+ccoef*coef} ${y1}, ${x2-ccoef*coef} ${y2}, ${x2+offset*-coef} ${y2}\n\t\t\t\tL ${x2}            ${y2}\n\t\t\t`;\n\t\t}\n\n\t\t/**\n\t\t * Renders the graph footer that shows the frame names and the alignment\n\t\t * score of the pair.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} data Graph data object as returned by getRenderingData.\n\t\t */\n\t\tincludeFooter(data) {\n\t\t\tconst {store, framePair} = this.props;\n\t\t\tconst svg = select(this.root).select(\"svg\");\n\t\t\tconst matching = data.nodes.filter(d => d.isMatchingNode).length;\n\t\t\tconst reference = data.nodes.filter(d => d.isReferenceNode && !d.isMatchingNode).length;\n\t\t\t\n\t\t\tif (store.frames[framePair[0]] && store.frames[framePair[1]]) {\n\t\t\t\tconst right = store.frames[framePair[0]];\n\t\t\t\tconst left = store.frames[framePair[1]];\n\n\t\t\t\tsvg.select(\"#title\")\n\t\t\t\t.attr(\"x\", this.margin)\n\t\t\t\t.attr(\"y\", this.height-this.margin/2)\n\t\t\t\t.attr(\"class\", \"graph-info\")\n\t\t\t\t.text(`Frames: ${right.name} (${right.gid}), ${left.name} (${left.gid})`)\n\n\t\t\t\tsvg.select(\"#stats\")\n\t\t\t\t\t.attr(\"x\", this.width)\n\t\t\t\t\t.attr(\"y\", this.height-this.margin/2)\n\t\t\t\t\t.attr(\"class\", \"graph-info graph-score\")\n\t\t\t\t\t.html(`\n\t\t\t\t\t\tAlignment score:\n\t\t\t\t\t\t<tspan class=\"match\">${matching}</tspan>\n\t\t\t\t\t\t÷\n\t\t\t\t\t\t(\n\t\t\t\t\t\t<tspan class=\"match\">${matching}</tspan>\n\t\t\t\t\t\t+\n\t\t\t\t\t\t<tspan class=\"reference\">${reference}</tspan>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t= ${scoreFormatter(matching/(matching + reference))}`)\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Renders the matching graph using D3.js and sets up DOM events for its\n\t\t * elements. This rendering should be controlled by D3.js and not ReactJS.\n\t\t * This guarantees that the diagram will not be part of React's virtual\n\t\t * DOM, thus preventing the framework from interfering with elements\n\t\t * created by the library (D3.js).\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\trenderGraph() {\n\t\t\tthis.height = window.innerHeight-10;\n\t\t\tthis.width = 960;\n\t\t\tthis.margin = 60;\n\n\t\t\tconst data = this.getRenderingData();\n\t\t\tconst svg = select(this.root).select(\"svg\");\n\n\t\t\tsvg\n\t\t\t\t.attr(\"height\", this.height)\n\t\t\t\t.attr(\"width\", this.width);\n\n\t\t\tthis.nodes = svg.select(\"#nodes\")\n\t\t\t\t.selectAll(\"text\")\n\t\t\t\t.data(data.nodes)\n\t\t\t\t.join(\"text\")\n\t\t\t\t\t.text(d => d.name)\n\t\t\t\t\t.each(function(d) {\n\t\t\t\t\t\tconst bbox = this.getBBox();\n\t\t\t\t\t\td.width = bbox.width;\n\t\t\t\t\t\td.height = bbox.height + 2;\n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"x\", d => d.x)\n\t\t\t\t\t.attr(\"y\", d => d.y)\n\t\t\t\t\t.attr(\"class\", d => {\n\t\t\t\t\t\tlet name = \"node\";\n\t\t\t\t\t\tif (d.isMatchingNode) {\n\t\t\t\t\t\t\tname += \" match\";\n\t\t\t\t\t\t} else if (d.isReferenceNode) {\n\t\t\t\t\t\t\tname += \" ref\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn name;\n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"opacity\", 0.75)\n\t\t\t\t\t.on(\"mouseover\", d => this.onMouseOverNode(d))\n\t\t\t\t\t.on(\"mouseout\", d => this.onMouseOutNode(d))\n\n\t\t\tthis.links = svg.select(\"#links\")\n\t\t\t\t.selectAll(\"path\")\n\t\t\t\t.data(data.links)\n\t\t\t\t.join(\"path\")\n\t\t\t\t\t.attr(\"d\", this.computePath)\n\t\t\t\t\t.attr(\"marker-end\", \"url(#arrowhead)\")\n\t\t\t\t\t.attr(\"stroke\", \"#555\")\n\t\t\t\t\t.attr(\"fill-opacity\", 0)\n\t\t\t\t\t.attr(\"opacity\", 0.1)\n\n\t\t\tthis.includeFooter(data);\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse over node event highlighting the element and its links. It\n\t\t * also invokes the handler of the parent component when it is passed via\n\t\t * props.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} datum Node data object.\n\t\t */\n\t\tonMouseOverNode(datum) {\n\t\t\tconst linked = new Set();\n\n\t\t\tthis.links\n\t\t\t\t.filter(d => d.source === datum || d.target === datum)\n\t\t\t\t.each(d => {\n\t\t\t\t\tlinked.add(d.source);\n\t\t\t\t\tlinked.add(d.target);\n\t\t\t\t})\n\t\t\t\t.attr(\"opacity\", 1);\n\n\t\t\tthis.nodes.filter(d => linked.has(d))\n\t\t\t\t.style(\"font-weight\", \"bold\")\n\t\t\t\t.attr(\"opacity\", 1);\n\n\t\t\tif (this.props.onMouseOverNode)\n\t\t\t\tthis.props.onMouseOverNode(datum, this.nodes, this.links);\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse out of node event, removing any highlight that was applied\n\t\t * before and invoking the parent component's handler when it is passed via\n\t\t * props.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonMouseOutNode() {\n\t\t\tthis.links.attr(\"opacity\", 0.1);\n\t\t\tthis.nodes\n\t\t\t\t.style(\"font-weight\", \"normal\")\n\t\t\t\t.attr(\"opacity\", 0.75);\n\n\t\t\tselect(\"#synset-tooltip\").style(\"display\", \"none\");\n\n\t\t\tif (this.props.onMouseOutNode)\n\t\t\t\tthis.props.onMouseOutNode();\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<div ref={node => this.root = node}>\n\t\t\t\t\t{\n\t\t\t\t\t\tstore.graphData.nodes.length > 0\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<svg>\n\t\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t\t<marker id=\"arrowhead\"\n\t\t\t\t\t\t\t\t\t\tmarkerWidth=\"10\" markerHeight=\"7\" \n\t\t\t\t\t\t\t\t\t\trefX=\"0\" refY=\"3.5\" orient=\"auto\">\n\t\t\t\t\t\t\t\t\t\t<polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#555\" />\n\t\t\t\t\t\t\t\t\t</marker>\n\t\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t\t\t<g id=\"nodes\" />\n\t\t\t\t\t\t\t\t<g id=\"links\" />\n\t\t\t\t\t\t\t\t<text id=\"title\" />\n\t\t\t\t\t\t\t\t<text id=\"stats\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t: <h3 className=\"no-data-text\">No data to show.</h3>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t}\n);\n\nexport default LUMatchingGraph;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {select} from 'd3-selection';\n\nimport './SynsetGraph.css';\n\nimport LUMatchingGraph from './LUMatchingGraph';\nimport AlignmentStore from '../stores/AlignmentStore';\n\n/**\n * A component based on LUMatchingGraph with specific functionalities for\n * Synset matching visualization.\n */\nconst SynsetGraph = observer(\n\tclass SynsetGraph extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t}\n\n\t\tposRegex = /\\.\\w{1,4}$/gi\n\n\t\t/**\n\t\t * Returns the HTML string to be used when rendering a lemma.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {string} lemma the lemma strin\n\t\t * @param {boolean} isHighlighted whether the lemma should be highlighted.\n\t\t * @returns {string} HTML string for the lemma.\n\t\t */\n\t\tlemmaHtml(lemma, isHighlighted) {\n\t\t\tif(isHighlighted)\n\t\t\t\treturn `<span class=\"synset-lemma highlighted\">${lemma}</span>`;\n\t\t\telse\n\t\t\t\treturn `<span class=\"synset-lemma\">${lemma}</span>`;\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse over node event. If the hovered node represents a synset\n\t\t * the synset tooltip will be rendered next to it by this method.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonMouseOverNode = (datum, nodes, links) => {\n\t\t\tif (datum.type !== 'intermediate')\n\t\t\t\treturn;\n\n\t\t\tconst {store} = this.props;\n\t\t\tconst synset = store.synsetData[datum.name];\n\t\t\tconst language = store.language;\n\t\t\tconst highlighted = new Set();\n\n\t\t\tlinks.each(d => {\n\t\t\t\thighlighted.add(d.source.name.replace(this.posRegex, ''))\n\t\t\t\thighlighted.add(d.target.name.replace(this.posRegex, ''))\n\t\t\t});\n\n\t\t\t// Updating tooltip box\n\t\t\tselect(\"#synset-name\").html(datum.name);\n\t\t\tselect(\"#synset-desc\").html(synset.definition);\n\t\t\tselect(\"#synset-eng-lemmas\")\n\t\t\t\t.html(synset[\"en\"].map(l => this.lemmaHtml(l, highlighted.has(l))).join(\", \"))\n\t\t\tselect(\"#synset-l2-title\").html(`${language}:`)\n\t\t\tselect(\"#synset-l2-lemmas\")\n\t\t\t\t.html(synset[language].map(l => this.lemmaHtml(l, highlighted.has(l))).join(\", \"))\n\n\t\t\t// Rendering tooltip with the right coordinates\n\t\t\tconst tooltip = select(\"#synset-tooltip\");\n\t\t\ttooltip.style(\"display\", \"block\");\n\t\t\tconst bbox = tooltip.node().getBoundingClientRect();\n\t\t\tlet top = datum.y + datum.height/2;\n\n\t\t\tif (datum.y + bbox.height > window.innerHeight) {\n\t\t\t\ttop = datum.y - datum.height - bbox.height;\n\t\t\t} else {\n\t\t\t\ttop = datum.y + datum.height/2;\n\t\t\t}\n\n\t\t\ttooltip\n\t\t\t\t.style(\"top\", `${top}px`)\n\t\t\t\t.style(\"left\", `${datum.x+12}px`)\n\t\t}\n\n\t\t/**\n\t\t * Handles mouse out of node event. The synset tooltip is hidden.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonMouseOutNode() {\n\t\t\tselect(\"#synset-tooltip\").style(\"display\", \"none\");\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, framePair} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<div ref={node => this.root = node}>\n\t\t\t\t\t<div id=\"synset-graph-content\">\n\t\t\t\t\t\t<div id=\"synset-tooltip\">\n\t\t\t\t\t\t\t<div className=\"synset-lang-title large\" id=\"synset-name\"></div>\n\t\t\t\t\t\t\t<div id=\"synset-desc\"></div>\n\t\t\t\t\t\t\t<div className=\"synset-lang-title\">eng:</div>\n\t\t\t\t\t\t\t<div id=\"synset-eng-lemmas\"></div>\n\t\t\t\t\t\t\t<div className=\"synset-lang-title\" id=\"synset-l2-title\" />\n\t\t\t\t\t\t\t<div id=\"synset-l2-lemmas\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<LUMatchingGraph\n\t\t\t\t\t\t\tstore={store}\n\t\t\t\t\t\t\tframePair={framePair}\n\t\t\t\t\t\t\tonMouseOverNode={this.onMouseOverNode}\n\t\t\t\t\t\t\tonMouseOutNode={this.onMouseOutNode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n)\n\nexport default SynsetGraph;","import { action, computed, \tdecorate, observable } from \"mobx\"\n\n/**\n * MobX store for global UI state.\n */\nclass UiState {\n\n\t/**\n\t * If the application sidebar is open.\n\t */\n\tisSidebarOpen = true\n\n\t/**\n\t * If the selected alignment (this.selectedFrames) visualization must be\n\t * visible.\n\t */\n\tisAlignmentDetailVisible = false\n\n\t/**\n\t * Selected alignment scoring method.\n\t */\n\tscoring = null\n\n\t/**\n\t * Existing alignment scoring options.\n\t */\n\tscoringOptions = []\n\n\t/**\n\t * Selected frames for Sankey diagram.\n\t */\n\tsankeyFrames = []\n\n\t/**\n\t * Selected frame pair for alignment detailed visualization.\n\t */\n\tselectedFrames = [null, null]\n\n\t/**\n\t * Gets available scoring options.\n\t * \n\t * @public\n\t * @method\n\t * @returns {Array} list of scoring options.\n\t */\n\tget scoringSelectOptions() {\n\t\treturn this.scoringOptions.map(x => ({ value: x.id, label: x.desc }));\n\t}\n\n\t/**\n\t * Sets the active scoring method of the visualizer.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} id scoring option id.\n\t */\n\tsetScoring(id) {\n\t\tthis.scoring = this.scoringOptions.find(x => x.id === id);\n\t}\n\n\t/**\n\t * Sets the selected frame pair.\n\t * \n\t * @public\n\t * @method\n\t * @param {string} source source frame id/\n\t * @param {string} target target frame id.\n\t */\n\tsetSelectedFramePair = action((source, target) => {\n\t\tthis.selectedFrames[0] = source;\n\t\tthis.selectedFrames[1] = target;\n\t})\n\n}\n\ndecorate(UiState, {\n\tisSidebarOpen: observable,\n\tisAlignmentDetailVisible: observable,\n\tscoring: observable,\n\tscoringOptions: observable,\n\tsankeyFrames: observable,\n\tselectedFrames: observable,\n\tscoringSelectOptions: computed,\n});\n\nexport default UiState;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {FaArrowLeft} from 'react-icons/fa';\nimport Sankey from './Sankey';\nimport SynsetGraph from './SynsetGraph';\nimport LUMatchingGraph from './LUMatchingGraph';\n\nimport './ChartPanel.css';\n\nimport AlignmentStore from '../stores/AlignmentStore';\nimport UiState from '../stores/UiState';\n\n/**\n * A component for the primary viewport of the application. It is responsible\n * for controlling which visualization will be rendered based on the UI state.\n */\nconst ChartPanel = observer(\n\tclass ChartPanel extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A mobx store for the application's UI state.\n\t\t\t */\n\t\t\tuiState: PropTypes.instanceOf(UiState),\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.selectableTypes = [\n\t\t\t\t\"lu_wordnet\",\n\t\t\t\t\"synset\",\n\t\t\t\t\"synset_inv\",\n\t\t\t\t\"lu_muse\"\n\t\t\t]\n\t\t}\n\n\t\t/**\n\t\t * Handles click on \"Back\" button/arrow.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t */\n\t\tonBackClick() {\n\t\t\tthis.props.uiState.isAlignmentDetailVisible = false;\n\t\t}\n\n\t\t/**\n\t\t * Handles click on a edge/link of the Sankey diagram.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} source edge's source frame object.\n\t\t * @param {Object} target edge's target frame object.\n\t\t */\n\t\tonEdgeClick(source, target) {\n\t\t\tconst {uiState} = this.props;\n\t\t\t\n\t\t\tif (this.selectableTypes.indexOf(uiState.scoring.type) > -1) {\n\t\t\t\tuiState.isAlignmentDetailVisible = true;\n\t\t\t\tuiState.setSelectedFramePair(source.gid, target.gid);\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tlet className = \"\";\n\n\t\t\t// Determining the tranformation that must be done to show the correct chart.\n\t\t\tclassName += uiState.isAlignmentDetailVisible ? \"shift\" : \"no-shift\";\n\t\t\tif (!uiState.isSidebarOpen) className += \" expanded\";\n\t\t\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tid=\"chart-panel-container\"\n\t\t\t\t\tclassName={className} >\n\t\t\t\t\t{\n\t\t\t\t\t\tuiState.isAlignmentDetailVisible &&\n\t\t\t\t\t\t<div id=\"back-button-container\" onClick={() => this.onBackClick()} >\n\t\t\t\t\t\t\t<FaArrowLeft size=\"1.75em\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<Sankey\n\t\t\t\t\t\tstore={store}\n\t\t\t\t\t\tonEdgeClick={(s, t) => this.onEdgeClick(s, t)}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\tuiState.scoring && uiState.scoring.type === 'lu_muse'\n\t\t\t\t\t\t\t? <LUMatchingGraph store={store} framePair={uiState.selectedFrames} />\n\t\t\t\t\t\t\t: <SynsetGraph store={store} framePair={uiState.selectedFrames} />\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n)\n\nexport default ChartPanel;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FormLabel.css';\n\n/**\n * \n * A component for styled form labels.\n * \n */\nexport default class FormLabel extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label string.\n\t\t */\n\t\ttext: PropTypes.string,\n\t}\n\n\trender() {\n\t\tconst {children, style} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"form-label\" style={style}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CheckBox.css';\n\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A checkbox component with label and state change event support.\n * \n */\nexport default class CheckBox extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The checkbox current state (checked or not).\n\t\t */\n\t\tchecked: PropTypes.bool,\n\t\t/**\n\t\t * The checkbox label string.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * A callback called when the checkbox state changes.\n\t\t * \n\t\t * @param {boolean} checked the new \"checked\" state.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t}\n\n\trender() {\n\t\tconst { checked, label, onChange } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"checkbox-wrapper\">\n\t\t\t\t<input type=\"checkbox\" checked={checked || false} onChange={e => onChange(e.target.checked)} />\n\t\t\t\t<FormLabel style={{ marginLeft: 6 }}>{label}</FormLabel>\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NumericInput.css';\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A numeric input field component.\n * \n */\nexport default class NumericInput extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * Optional label for this field.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * The minimum value for the input element. \n\t\t */\n\t\tmin: PropTypes.number,\n\t\t/**\n\t\t * The maximum value for the input element. \n\t\t */\n\t\tmax: PropTypes.number,\n\t\t/**\n\t\t * The step of the input field. Use 1 for integer only.\n\t\t */\n\t\tstep: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t/**\n\t\t * Placeholder string of the input field.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * The numeric input field value.\n\t\t */\n\t\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t/**\n\t\t * Whether the input field is disabled or not.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * A callback called when the input field value changes.\n\t\t * \n\t\t * @param {number} value the new value of the input field.\n\t\t */\n\t\tonChange: PropTypes.func,\n\t}\n\n\t/**\n\t * Renders the input label if it was passed via props.\n\t * \n\t * @public\n\t * @method\n\t * @returns {JSX} \n\t */\n\trenderLabel() {\n\t\tconst {label} = this.props;\n\n\t\tif (label) {\n\t\t\treturn <FormLabel>{label}</FormLabel>;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {min, max, step, placeholder, value, disabled, onChange} = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.renderLabel()}\n\t\t\t\t<div className=\"numeric-input-wrapper\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tmax={max}\n\t\t\t\t\t\tstep={step}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tvalue={value || ''}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tonChange={e => onChange(Number(e.target.value))}\n\t\t\t\t\t/>\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CheckBoxEnabledInput.css';\n\nimport CheckBox from './CheckBox';\nimport NumericInput from './NumericInput';\n\n/**\n * \n * A component for a numeric input field that can be enabled or disabled\n * depending ina checkbox.\n * \n */\nexport default class CheckBoxEnabledInput extends React.Component {\n\tstatic propTypes = {\n\t\t/**\n\t\t * The checkbox current state (checked or not).\n\t\t */\n\t\tchecked: PropTypes.bool,\n\t\t/**\n\t\t * The numeric input field value.\n\t\t */\n\t\tvalue: PropTypes.number,\n\t\t/**\n\t\t * The checkbox label string.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * The input field placeholder string.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * The minimum value for the input element. \n\t\t */\n\t\tmin: PropTypes.number,\n\t\t/**\n\t\t * A callback called when the checkbox state changes.\n\t\t * \n\t\t * @param {boolean} checked the new \"checked\" state.\n\t\t */\n\t\tonCheckedChange: PropTypes.func,\n\t\t/**\n\t\t * A callback called when the input field value changes.\n\t\t * \n\t\t * @param {number} value the new value of the input field.\n\t\t */\n\t\tonValueChange: PropTypes.func,\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchecked,\n\t\t\tvalue,\n\t\t\tlabel,\n\t\t\tplaceholder,\n\t\t\tmin,\n\t\t\tonCheckedChange,\n\t\t\tonValueChange,\n\t\t} = this.props;\n\t\t\t\n\t\treturn (\n\t\t\t<div className=\"checkbox-enable-input-wrapper\">\n\t\t\t\t<CheckBox\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tonChange={onCheckedChange}\n\t\t\t\t\tlabel={label}\n\t\t\t\t/>\n\t\t\t\t<div className=\"checkbox-enabled-input-input-wrapper\">\n\t\t\t\t\t<NumericInput\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tdisabled={!checked}\n\t\t\t\t\t\tonChange={onValueChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './JsonFileInput.css';\n\n/**\n * \n * A file input component used to load local json files.\n * \n */\nclass JsonFileInput extends React.Component {\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * A callback called when a valid json file is read and parsed.\n\t\t * \n\t\t * @param {Object} data the parsed json file.\n\t\t */\n\t\tonFileChange: PropTypes.func,\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terror: false,\n\t\t}\n\t}\n\n\t/**\n\t * Parses the file of the input field and sends its contents to the parent\n\t * component. When parsing fails, this method will be update this component\n\t * state.\n\t * \n\t * @todo Move parsing to a service worker.\n\t * @public\n\t * @param {Event} event the file change event.\n\t */\n\tonFileChange = event => {\n\t\tconst file = event.target.files[0];\n\n\t\tif (file) {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.addEventListener('load', e => {\n\t\t\t\tlet error = false;\n\t\t\t\ttry {\n\t\t\t\t\tconst data = JSON.parse(e.target.result);\n\t\t\t\t\tthis.props.onFileChange(data);\n\t\t\t\t} catch (exception) {\n\t\t\t\t\terror = true;\n\t\t\t\t}\n\t\t\t\tthis.setState({ error });\n\t\t\t});\n\n\t\t\treader.readAsBinaryString(file);\n\t\t}\n\t}\n\n\t/**\n\t * Renders an error message.\n\t * \n\t * @public\n\t * @method\n\t * @returns {JSX}\n\t */\n\trenderError() {\n\t\tconst {error} = this.state;\n\t\treturn error ? <p className=\"upload-error\">Error reading input file.</p> : null;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<input type=\"file\" onChange={this.onFileChange} />\n\t\t\t\t{this.renderError()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JsonFileInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\n\nimport './Slider.css';\n\nimport FormLabel from './FormLabel';\n\n/**\n * \n * A slider component that also allows textual input in [0,1] interval.\n * \n */\nconst Slider = observer(\n\tclass Slider extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * The current value of the slider.\n\t\t\t */\n\t\t\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\t\t\t/**\n\t\t\t * A callback called when the slider value changes.\n\t\t\t * \n\t\t\t * @param {string} value the new value.\n\t\t\t */\n\t\t\tonChange: PropTypes.func,\n\t\t}\n\n\t\trender(){\n\t\t\tconst {value, onChange, label} = this.props;\n\n\t\t\treturn (\n\t\t\t\t<div className=\"slider-container\">\n\t\t\t\t\t<FormLabel>{label}</FormLabel>\n\t\t\t\t\t<div className=\"slider-input-container\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep={0.001}\n\t\t\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\t\t\tonChange={e => onChange(e.target.value)}\n\t\t\t\t\t\t\tclassName=\"slider\" />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\tstep=\"any\"\n\t\t\t\t\t\t\tvalue={value || \"\"}\n\t\t\t\t\t\t\tonChange={e => onChange(e.target.value)}\n\t\t\t\t\t\t\tclassName=\"slider-text\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport MultiSelect from \"@kenshooui/react-multi-select\";\nimport { FaBars } from 'react-icons/fa';\nimport { observer } from 'mobx-react';\n\nimport './Sidebar.css';\n\nimport CheckBox from './CheckBox';\nimport CheckBoxEnabledInput from './CheckBoxEnabledInput';\nimport FormLabel from './FormLabel';\nimport JsonFileInput from './JsonFileInput';\nimport NumericInput from './NumericInput';\nimport Slider from './Slider';\n\nimport AlignmentStore from '../stores/AlignmentStore';\nimport UiState from '../stores/UiState';\n\n/**\n * \n * A Sidebar component for the alignment visualization tool. This sidebar\n * renders the components necessary to input alignment json files and change\n * visualization parameters.\n * \n */\nconst Sidebar = observer(\n\tclass Sidebar extends React.Component {\n\t\tstatic propTypes = {\n\t\t\t/**\n\t\t\t * A mobx store of frame alignments.\n\t\t\t */\n\t\t\tstore: PropTypes.instanceOf(AlignmentStore),\n\t\t\t/**\n\t\t\t * A mobx store for the application's UI state.\n\t\t\t */\n\t\t\tuiState: PropTypes.instanceOf(UiState),\n\t\t}\n\n\t\t/**\n\t\t * Handles an alignment file. All parsed data is loaded to the\n\t\t * AlignmentStore instance.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} data parsed data from an alignment file.\n\t\t */\n\t\tonFileChange = data => this.props.store.load(data)\n\n\t\t/**\n\t\t * Handles the selection of a scoring option.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Object} option the selected scoring option.\n\t\t */\n\t\tonScoringChange = option => this.props.uiState.setScoring(option.value)\n\n\t\t/**\n\t\t * Handles changes in frame selection for the visualization.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {Array} selected list of selected frames.\n\t\t */\n\t\tonFrameSelectionChange = selected => this.props.uiState.sankeyFrames = selected\n\n\t\t/**\n\t\t * Updates a property in the params object of the current scoring of the\n\t\t * UiState instance.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {string} param the parameter propery name\n\t\t * @param {*} value the new value for the parameter.\n\t\t */\n\t\tupdateParam = (param, value) => {\n\t\t\tconst {uiState} = this.props;\n\t\t\tif (uiState.scoring) {\n\t\t\t\tuiState.scoring.params[param] = value;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles change in visualization score threshold.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value the new threshold value.\n\t\t */\n\t\tonThresholdChange = value => this.updateParam(\"threshold\", value)\n\n\t\t/**\n\t\t * Handles change in checkbox \"Restrict number of connections of each frame\".\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {boolean} checked whether the checkbox is checked. \n\t\t */\n\t\tonLimitSankeyEdgesChange = checked => this.updateParam(\"limitSankeyEdges\", checked)\n\n\t\t/**\n\t\t * Handles change in maximum number of edges displayed in the Sankey diagram.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value an integer edge limit for each frame.\n\t\t */\n\t\tonSankeyEdgesMaxChange = value => this.updateParam(\"sankeyMaxEdges\", value)\n\n\t\t/**\n\t\t * Handles change on checkbox \"Show ONLY selected frames\".\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {boolean} checked whether the checkbox is checked. \n\t\t */\n\t\tonDisplayOnlyFrameSetChange = checked => this.updateParam(\"displayOnlyFrameSet\", checked)\n\n\t\t/**\n\t\t * Handles change in vector neighborhood size parameter.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value an integer neighborhood size.\n\t\t */\n\t\tonNeighborhoodSizeChange = value => this.updateParam(\"neighborhoodSize\", value)\n\n\t\t/**\n\t\t * Handles change in cosine similarity threshold.\n\t\t * \n\t\t * @public\n\t\t * @method\n\t\t * @param {number} value the new cosine similarity threshold value.\n\t\t */\n\t\tonSimilarityThresholdChange = value => this.updateParam(\"similarityThreshold\", value)\n\n\t\t/**\n\t\t * Renders parameters that are exclusive for scoring matching LUs through\n\t\t * vectors.\n\t\t * \n\t\t * @public \n\t\t * @method\n\t\t * @returns {JSX} \n\t\t */\n\t\trenderVectorFields() {\n\t\t\tconst {uiState} = this.props;\n\n\t\t\tif (uiState.scoring && uiState.scoring.type === 'lu_muse') {\n\t\t\t\tconst {params} = uiState.scoring;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t<NumericInput\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\tvalue={params.neighborhoodSize}\n\t\t\t\t\t\t\tonChange={this.onNeighborhoodSizeChange}\n\t\t\t\t\t\t\tlabel=\"Vector neighborhood size\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\tlabel=\"Cosine similarity threshold\"\n\t\t\t\t\t\t\tvalue={params.similarityThreshold}\n\t\t\t\t\t\t\tonChange={this.onSimilarityThresholdChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\trender() {\n\t\t\tconst {store, uiState} = this.props;\n\t\t\tconst sidebarWidth = { width: uiState.isSidebarOpen ? '500px' : '60px' };\n\t\t\tconst contentDisplay = { display: uiState.isSidebarOpen ? 'block' : 'none' };\n\t\t\tconst params = uiState.scoring ? uiState.scoring.params : {};\n\t\t\n\t\t\treturn (\n\t\t\t\t<div className=\"sidebar-container\" style={sidebarWidth} >\n\t\t\t\t\t<div className=\"sidebar-icon-container\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => uiState.isSidebarOpen = !uiState.isSidebarOpen}\n\t\t\t\t\t\t\tclassName=\"siderbar-icon-click-wrapper\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FaBars size=\"1.75em\" color=\"#3F51B5\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={contentDisplay} >\n\t\t\t\t\t\t<FormLabel style={{ marginTop: 0 }}>Alignment file</FormLabel>\n\t\t\t\t\t\t<JsonFileInput onFileChange={this.onFileChange} />\n\t\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<FormLabel>Scoring technique</FormLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\toptions={uiState.scoringSelectOptions}\n\t\t\t\t\t\t\t\t\tonChange={this.onScoringChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={params.threshold}\n\t\t\t\t\t\t\t\tonChange={this.onThresholdChange}\n\t\t\t\t\t\t\t\tlabel=\"Score threshold\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.renderVectorFields()}\n\t\t\t\t\t\t<div className=\"sidebar-row\">\n\t\t\t\t\t\t\t<CheckBoxEnabledInput\n\t\t\t\t\t\t\t\tchecked={params.limitSankeyEdges}\n\t\t\t\t\t\t\t\tvalue={params.sankeyMaxEdges}\n\t\t\t\t\t\t\t\tonCheckedChange={this.onLimitSankeyEdgesChange}\n\t\t\t\t\t\t\t\tonValueChange={this.onSankeyEdgesMaxChange}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tlabel=\"Restrict number of connections of each frame:\"\n\t\t\t\t\t\t\t\tplaceholder=\"Max # of edges for frame\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={params.displayOnlyFrameSet}\n\t\t\t\t\t\t\t\tonChange={this.onDisplayOnlyFrameSetChange}\n\t\t\t\t\t\t\t\tlabel=\"Show ONLY selected frames\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FormLabel>Frame selection</FormLabel>\n\t\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\t\titems={store.frameOptions}\t\n\t\t\t\t\t\t\tselectedItems={uiState.sankeyFrames}\n\t\t\t\t\t\t\tonChange={this.onFrameSelectionChange}\n\t\t\t\t\t\t\tresponsiveHeight=\"350px\"\n\t\t\t\t\t\t\titemHeight={30}\n\t\t\t\t\t\t\twrapperClassName=\"multi-select-wrapper\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n);\n\nexport default Sidebar;","import React from 'react';\n\nimport \"@kenshooui/react-multi-select/dist/style.css\";\nimport './App.css';\n\nimport ChartPanel from './components/ChartPanel';\nimport Sidebar from './components/Sidebar';\nimport AlignmentStore from './stores/AlignmentStore';\nimport UiState from './stores/UiState';\n\nconst uiState = new UiState();\nconst store = new AlignmentStore(uiState);\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Sidebar store={store} uiState={uiState} />\n\t\t\t<div className=\"app-body\">\n\t\t\t\t<ChartPanel store={store} uiState={uiState} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}